/*

    We can verify the results of the test circles usinf code generated by Claude AI.
    https://claude.ai/chat/8273d627-9156-48ad-884d-98231341a6c8

    This assumes two circles C1 and C2. Both have a radius of 1.
    The centerpoints are at:

    C1 = { 1, 0 }
    C2 = { 0, 1 }

    The area of intersection A is computed as:

    A = 0.57079633

*/

function circleIntersectionArea( x1, y1, r1, x2, y2, r2 ) {

    // Calculate the distance between the centers
    const d = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);

    // Check if the circles don't intersect or if one is contained within the other
    if (d > r1 + r2) {
        return 0; // No intersection
    }
    if (d <= Math.abs(r1 - r2)) {
        return Math.PI * Math.min(r1, r2) ** 2; // One circle is inside the other
    }

    // Calculate the angles
    const angle1 = Math.acos((r1 ** 2 + d ** 2 - r2 ** 2) / (2 * r1 * d));
    const angle2 = Math.acos((r2 ** 2 + d ** 2 - r1 ** 2) / (2 * r2 * d));

    // Calculate the areas of the circular segments
    const area1 = angle1 * r1 ** 2 - r1 ** 2 * Math.sin(2 * angle1) / 2;
    const area2 = angle2 * r2 ** 2 - r2 ** 2 * Math.sin(2 * angle2) / 2;

    // Return the sum of the two segment areas
    return area1 + area2;
}

function circleIntersectionTest( c1, c2 ) {

    const o1 = c1.origin;
    const o2 = c2.origin;

    const x1 = o1.x;
    const y1 = o1.y;
    const r1 = c1.radius;

    const x2 = o2.x;
    const y2 = o2.y;
    const r2 = c2.radius;

    return circleIntersectionArea( x1, y1, r1, x2, y2, r2 );

}


